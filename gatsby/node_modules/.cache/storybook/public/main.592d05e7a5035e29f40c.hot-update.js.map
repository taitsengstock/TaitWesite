{"version":3,"file":"main.592d05e7a5035e29f40c.hot-update.js","sources":["webpack:///./src/components/Card/index.js","webpack:///./src/components/Carousel.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport useOutsideClick from \"../../utils/useOutsideClick\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronDown,\n  faChevronUp,\n  } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'gatsby-plugin-modal-routing';\nimport {breakpoints} from '../../styles/GlobalStyles.js';\nimport Carousel from '../Carousel';\nimport { css } from 'styled-components'\n\nconst {tablet} = breakpoints\n\nconst Card = ({ project }) => {\n  const tileRef = useRef()\n  const [open, setOpen] = useState(false);\n  const [hovered, setHovered] = useState(false);\n\n  const mobileToggleOpen = () => {\n    if (window.matchMedia(\"(max-width: 700px)\").matches) {\n    setOpen(!open)\n    } else {\n      return null\n    }\n  };\n  useOutsideClick(tileRef, () => {\n    console.log(open)\n    setOpen(false)\n  })\n\n  return (\n    <div \n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      css={css`\n    `}\n    ref={tileRef}\n    >\n      <div css={css`\n      `}>\n        <div \n          onClick={() => setOpen(!open)}\n          css={css`\n            background-image: url(${project?.image?.asset?.url});\n            background-size: cover;\n            height: 100%;\n        `}>\n          <div css={css`\n            position: relative;\n            z-index: 3;\n            display: grid;\n            align-items: center;\n          `}>\n            {/* <Carousel fixedArrows slidesDesktop={1} slidesTablet={1} slidesMobile={1}> \n              <img \n                src={`${project?.logo?.asset?.url}`} \n                alt={project?.name} \n              />\n             </Carousel> */}\n          </div>\n        </div>\n        <div css={css`\n          height: 100%;\n        `}>\n          text box\n          <Link\n            asModal\n            to={`/project/${project?.slug?.current}`}\n          >\n            see more\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n  }\n\n  Card.propTypes = {\n\n  }\n  \n  Card.defaultProps = {\n    primary: true,\n    children: 'Add To Cart',\n    large: false,\n    to: '/test'\n  }\n\n  export default Card","import React, { useRef, useState } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport styled, { css } from 'styled-components';\n\n\nconst ArrowContainer = styled.div`\n  display: grid;\n  position: absolute;\n  height: 100%;\n  padding: 2rem;\n  transition: all 0.2s ease-in-out;\n  z-index: 3;\n  pointer-events: none;\n`\n\nconst ArrowButton = styled.button`\n  align-self: center;\n  pointer-events: auto;\n  font-size: 2rem;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  background: #ffffff69;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n`\n\n\n\n\n\nexport default function Carousel({ children, slidesDesktop, slidesTablet, slidesMobile, fixedArrows }) {\n\n    const [hovered, setHovered] = useState(false)\n    const customSlider = useRef();\n\n    const renderLeftArrow = () => (\n      <ArrowContainer css={css`\n          top: 0;\n          left: ${!fixedArrows && hovered ? '40px' : '0'};\n          opacity: ${hovered ? '1' : '0'};\n      `}>\n        <ArrowButton\n          onClick={() => customSlider.current.slickPrev()}\n          type=\"button\"\n        >\n          <FontAwesomeIcon\n            icon={faChevronLeft}\n          />\n        </ArrowButton>\n      </ArrowContainer>\n    );\n    const renderRightArrow = () => (\n      <ArrowContainer css={css`\n        top: 0;\n        right: ${!fixedArrows && hovered ? '40px' : '0'};\n        opacity: ${hovered ? '1' : '0'};\n      `}>\n        <ArrowButton\n          onClick={() => customSlider.current.slickNext()}\n          type=\"button\"\n        >\n          <FontAwesomeIcon\n            icon={faChevronRight}\n          />\n        </ArrowButton>\n      </ArrowContainer>\n    );\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: slidesDesktop,\n        slidesToScroll: 1,\n        arrows: false,\n        responsive: [\n          {\n            breakpoint: 1200,\n            settings: {\n              slidesToShow: slidesTablet,\n              slidesToScroll: 1,\n            },\n          },\n          {\n            breakpoint: 980,\n            settings: {\n              slidesToShow: slidesMobile,\n              slidesToScroll: 1,\n            },\n          },\n        ],\n    };\n  \n    return (\n        <div \n          onMouseEnter={() => setHovered(true)} \n          onMouseLeave={() => setHovered(false)}\n          onClick={() => customSlider.current.slickPrev()}\n          css={css`\n            position: relative;\n          `}\n        >\n        {renderLeftArrow()}\n        <Slider {...settings} ref={(slider) => (customSlider.current = slider)}>\n            {children}\n        </Slider>\n        {renderRightArrow()}\n        </div>\n    );\n  }\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AALA;AAOA;AAAA;AAGA;AAAA;AAAA;AACA;AAFA;AAOA;AAAA;AAcA;AAAA;AAKA;AACA;AAFA;AAUA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AAUA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAFA;AAKA;AADA;AAVA;AACA;AAeA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAFA;AAKA;AADA;AAVA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AAFA;AAFA;AAfA;AAyBA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AASA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;A","sourceRoot":""}