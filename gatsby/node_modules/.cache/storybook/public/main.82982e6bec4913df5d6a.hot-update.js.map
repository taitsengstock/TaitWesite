{"version":3,"file":"main.82982e6bec4913df5d6a.hot-update.js","sources":["webpack:///./src/components/Carousel.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport styled, { css } from 'styled-components';\n\n\nconst ArrowContainer = styled.div`\n  display: grid;\n  position: absolute;\n  height: 100%;\n  padding: 2rem;\n  transition: all 0.2s ease-in-out;\n  z-index: 3;\n  pointer-events: none;\n`\n\nconst ArrowButton = styled.button`\n  align-self: center;\n  pointer-events: auto;\n  font-size: 2rem;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  background: #ffffff69;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n`\n\nexport default function Carousel({ children, slidesDesktop, slidesTablet, slidesMobile, fixedArrows }) {\n\n    const [hovered, setHovered] = useState(false)\n    const customSlider = useRef();\n\n    const renderLeftArrow = () => (\n      <ArrowContainer css={css`\n          top: 0;\n          left: ${!fixedArrows && hovered ? '40px' : '0'};\n          opacity: ${hovered ? '1' : '0'};\n      `}>\n        <ArrowButton\n          onClick={() => customSlider.current.slickPrev()}\n          type=\"button\"\n        >\n          <FontAwesomeIcon\n            icon={faChevronLeft}\n          />\n        </ArrowButton>\n      </ArrowContainer>\n    );\n    const renderRightArrow = () => (\n      <ArrowContainer css={css`\n        top: 0;\n        right: ${!fixedArrows && hovered ? '40px' : '0'};\n        opacity: ${hovered ? '1' : '0'};\n      `}>\n        <ArrowButton\n          onClick={() => customSlider.current.slickNext()}\n          type=\"button\"\n        >\n          <FontAwesomeIcon\n            icon={faChevronRight}\n          />\n        </ArrowButton>\n      </ArrowContainer>\n    );\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: slidesDesktop,\n        slidesToScroll: 1,\n        arrows: false,\n        responsive: [\n          {\n            breakpoint: 1200,\n            settings: {\n              slidesToShow: slidesTablet,\n              slidesToScroll: 1,\n            },\n          },\n          {\n            breakpoint: 980,\n            settings: {\n              slidesToShow: slidesMobile,\n              slidesToScroll: 1,\n            },\n          },\n        ],\n    };\n  \n    return (\n        <div \n          onMouseEnter={() => setHovered(true)} \n          onMouseLeave={() => setHovered(false)}\n          onClick={() => customSlider.current.slickPrev()}\n          css={css`\n            position: relative;\n          `}\n        >\n        {renderLeftArrow()}\n        <Slider {...settings} ref={(slider) => (customSlider.current = slider)}>\n            {children}\n        </Slider>\n        {renderRightArrow()}\n        </div>\n    );\n  }\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AAUA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAFA;AAKA;AADA;AAVA;AACA;AAeA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAFA;AAKA;AADA;AAVA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AAFA;AAFA;AAfA;AAyBA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AASA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;A","sourceRoot":""}