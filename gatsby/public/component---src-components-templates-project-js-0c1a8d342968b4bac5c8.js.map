{"version":3,"sources":["webpack:///./src/components/templates/Project.js"],"names":["SliderStyles","styled","div","SingleProjectPage","project","data","customSingleSlider","useRef","className","name","skills","map","skill","key","id","icon","faChevronLeft","onClick","current","slickPrev","type","infinite","speed","arrows","slidesToShow","slidesToScroll","dots","ref","slider","imagesGallery","galleryImage","fluid","asset","faChevronRight","slickNext"],"mappings":"uQAaMA,EAAeC,IAAOC,IAAV,2EAAGD,CAAH,gP,mQAwBH,SAASE,EAAT,GAAmD,IAAdC,EAAa,EAArBC,KAAQD,QAC5CE,EAAqBC,mBAU3B,OACE,6BACE,yBAGE,wBAAIC,UAAU,MAAMJ,EAAQK,MAC5B,yBAIGL,EAAQM,OAAOC,KAAI,SAACC,GAAD,OAClB,wBAAIC,IAAKD,EAAME,GAAIN,UAAU,SAASI,EAAMH,WAIlD,kBAACT,EAAD,KACE,kBAAC,IAAD,CACEe,KAAMC,IACNR,UAAU,aACVS,QAAS,kBAAMX,EAAmBY,QAAQC,aAC1CC,KAAK,WAEP,kBAAC,IAAD,iBA/BW,CACfC,UAAU,EACVC,MAAO,IACPC,QAAQ,EACRC,aAAc,EACdC,eAAgB,EAChBC,MAAM,GAyBF,CAEEC,IAAK,SAACC,GAAD,OAAatB,EAAmBY,QAAUU,KAE9CxB,EAAQyB,cAAclB,KAAI,SAACmB,GAAD,OACzB,kBAAC,IAAD,CAAKC,MAAOD,EAAaE,MAAMD,YAGnC,kBAAC,IAAD,CACEhB,KAAMkB,IACNzB,UAAU,aACVS,QAAS,kBAAMX,EAAmBY,QAAQgB,aAC1Cd,KAAK","file":"component---src-components-templates-project-js-0c1a8d342968b4bac5c8.js","sourcesContent":["import React, { useRef } from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst SliderStyles = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  position: relative;\n\n  .slick-slide {\n    max-height: 70vh;\n  }\n  .slick-slide.slick-active.slick-current {\n    max-height: 100%;\n  }\n  .arrow.prev,\n  .arrow.next {\n    top: 30vh;\n    position: absolute;\n  }\n  .arrow.prev {\n    left: 0px;\n  }\n  .arrow.next {\n    right: 0px;\n  }\n`;\n\nexport default function SingleProjectPage({ data: { project } }) {\n  const customSingleSlider = useRef();\n  const settings = {\n    infinite: false,\n    speed: 500,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: false,\n  };\n  \n  return (\n    <div>\n      <div css={css`\n      padding: 20px;\n      `}>\n        <h1 className=\"h2\">{project.name}</h1>\n        <ul css={css`\n           list-style-type: none;\n           padding-inline-start: 0px;\n        `}>\n          {project.skills.map((skill) => (\n            <li key={skill.id} className=\"label\">{skill.name}</li>\n          ))}\n        </ul>\n      </div>\n      <SliderStyles>\n        <FontAwesomeIcon\n          icon={faChevronLeft}\n          className=\"arrow prev\"\n          onClick={() => customSingleSlider.current.slickPrev()}\n          type=\"button\"\n        />\n        <Slider\n          {...settings}\n          ref={(slider) => (customSingleSlider.current = slider)}\n        >\n          {project.imagesGallery.map((galleryImage) => (\n            <Img fluid={galleryImage.asset.fluid} />\n          ))}\n        </Slider>\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          className=\"arrow next\"\n          onClick={() => customSingleSlider.current.slickNext()}\n          type=\"button\"\n        />\n      </SliderStyles>\n    </div>\n  );\n}\n\n// this needs to be dynamic based on the slug passed in via gatsby-node.js\nexport const query = graphql`\n  query($slug: String!) {\n    project: sanityProject(slug: { current: { eq: $slug } }) {\n      name\n      id\n      skills {\n        name\n        id\n      }\n      imagesGallery {\n        asset {\n          fluid(maxWidth: 800) {\n            ...GatsbySanityImageFluid\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}