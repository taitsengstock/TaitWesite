{"version":3,"sources":["webpack:///./src/components/templates/Project.js"],"names":["SliderStyles","breakpoints","mobile","styled","div","SingleProjectPage","project","data","useState","hovered","setHovered","customSingleSlider","useRef","className","name","skills","map","skill","key","id","onMouseEnter","onMouseLeave","icon","faChevronLeft","onClick","current","slickPrev","type","infinite","speed","arrows","slidesToShow","slidesToScroll","dots","ref","slider","imagesGallery","galleryImage","fluid","asset","faChevronRight","slickNext"],"mappings":"uQAgBMA,G,UAFWC,EAAVC,OAEcC,IAAOC,IAAV,2EAAGD,CAAH,2Q,66BAsBH,SAASE,EAAT,GAAmD,IAAdC,EAAa,EAArBC,KAAQD,QAAa,EACjCE,oBAAS,GAAhCC,EADwD,KAC/CC,EAD+C,KAEzDC,EAAqBC,mBAU3B,OACE,6BACE,yBAGE,wBAAIC,UAAU,MAAMP,EAAQQ,MAC5B,yBAIGR,EAAQS,OAAOC,KAAI,SAACC,GAAD,OAClB,wBAAIC,IAAKD,EAAME,GAAIN,UAAU,SAASI,EAAMH,WAIlD,kBAACd,EAAD,CACEoB,aAAc,kBAAMV,GAAW,IAC/BW,aAAc,kBAAMX,GAAW,KAE/B,qBACEY,KAAMC,IACNV,UAAU,aACVW,QAAS,kBAAMb,EAAmBc,QAAQC,aAC1CC,KAAK,SAJP,KAMYlB,EAAU,OAAS,IAN/B,MAOeA,EAAU,IAAM,MAG/B,qCAtCW,CACfmB,UAAU,EACVC,MAAO,IACPC,QAAQ,EACRC,aAAc,EACdC,eAAgB,EAChBC,MAAM,GAgCF,CAEEC,IAAK,SAACC,GAAD,OAAaxB,EAAmBc,QAAUU,KAW9C7B,EAAQ8B,cAAcpB,KAAI,SAACqB,GAAD,OACzB,qBAAKC,MAAOD,EAAaE,MAAMD,YAQnC,qBACEhB,KAAMkB,IACN3B,UAAU,aACVW,QAAS,kBAAMb,EAAmBc,QAAQgB,aAC1Cd,KAAK,SAJP,MAMalB,EAAU,OAAS,IANhC,MAOeA,EAAU,IAAM","file":"component---src-components-templates-project-js-eb23f4e2d280538b265b.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport {breakpoints} from '../../styles/GlobalStyles.js';\n\nconst {mobile} = breakpoints\n\nconst SliderStyles = styled.div`\n  margin: 20px 20px 40px;\n  position: relative;\n  overflow: hidden;\n  .slick-slide {\n    max-height: 70vh;\n  }\n  .slick-slide.slick-active.slick-current {\n    max-height: 100%;\n  }\n   .arrow{\n    top: 30vh;\n    position: absolute;\n    z-index: 1;\n    transition: all 0.2s ease-in-out;\n  }\n  .slick-dots {\n    position: relative;\n    bottom: 0;\n  }\n`;\n\nexport default function SingleProjectPage({ data: { project } }) {\n  const [hovered, setHovered] = useState(false)\n  const customSingleSlider = useRef();\n  const settings = {\n    infinite: true,\n    speed: 500,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: true,\n  };\n  \n  return (\n    <div>\n      <div css={css`\n      padding: 20px;\n      `}>\n        <h1 className=\"h2\">{project.name}</h1>\n        <ul css={css`\n           list-style-type: none;\n           padding-inline-start: 0px;\n        `}>\n          {project.skills.map((skill) => (\n            <li key={skill.id} className=\"label\">{skill.name}</li>\n          ))}\n        </ul>\n      </div>\n      <SliderStyles       \n        onMouseEnter={() => setHovered(true)} \n        onMouseLeave={() => setHovered(false)}\n      >\n        <FontAwesomeIcon\n          icon={faChevronLeft}\n          className=\"arrow prev\"\n          onClick={() => customSingleSlider.current.slickPrev()}\n          type=\"button\"\n          css={css`\n            left: ${hovered ? '40px' : '0'};\n            opacity: ${hovered ? '1' : '0'};\n          `}\n        />\n        <Slider\n          {...settings}\n          ref={(slider) => (customSingleSlider.current = slider)}\n          css={css`\n            .slick-dots {\n              li {\n                button {\n                  box-shadow: none;\n                }\n              }\n            }\n          `}\n        >\n          {project.imagesGallery.map((galleryImage) => (\n            <Img fluid={galleryImage.asset.fluid} css={css`\n              border-radius: 8px;\n              .gatsby-image-wrapper {\n                display: block;\n              }\n            `}/>\n          ))}\n        </Slider>\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          className=\"arrow next\"\n          onClick={() => customSingleSlider.current.slickNext()}\n          type=\"button\"\n          css={css`\n            right: ${hovered ? '40px' : '0'}; \n            opacity: ${hovered ? '1' : '0'};\n          `}\n        />\n      </SliderStyles>\n    </div>\n  );\n}\n\n// this needs to be dynamic based on the slug passed in via gatsby-node.js\nexport const query = graphql`\n  query($slug: String!) {\n    project: sanityProject(slug: { current: { eq: $slug } }) {\n      name\n      id\n      skills {\n        name\n        id\n      }\n      imagesGallery {\n        asset {\n          fluid(maxWidth: 800) {\n            ...GatsbySanityImageFluid\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}