{"version":3,"sources":["webpack:///./src/components/ProjectList.js","webpack:///./src/pages/projects.js"],"names":["classNames","require","ProjectStyles","styled","div","SingleProject","project","useState","hovered","setHovered","toggleHover","showing","setShow","projectClasses","active","open","console","log","image","asset","fluid","className","onMouseEnter","onMouseLeave","style","backgroundImage","logo","onClick","type","to","slug","current","name","skills","map","skill","Projectlist","projects","settings","dots","infinite","speed","slidesToShow","slidesToScroll","key","id","ProjectsPage","data","nodes"],"mappings":"8PASMA,EAAaC,EAAQ,QAErBC,EAAgBC,IAAOC,IAAV,6EAAGD,CAAH,oEAQnB,SAASE,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QAAW,EACJC,oBAAS,GAAhCC,EAD2B,KAClBC,EADkB,KAE5BC,EAAc,kBAAMD,GAAYD,IAFJ,EAIPD,oBAAS,GAA7BI,EAJ2B,KAIlBC,EAJkB,KAO5BC,EAAiBb,EAAW,CAChCM,SAAS,EACTQ,OAAQN,EAAU,SAAW,GAC7BO,KAAMJ,EAAU,OAAS,KAI3B,OADAK,QAAQC,IAAIX,EAAQY,MAAMC,MAAMC,OAE9B,kBAAClB,EAAD,KACE,yBAEEmB,UAAWR,EACXS,aAAcZ,EACda,aAAcb,GAEd,yBACEc,MAAO,CACLC,gBAAgB,OAAQnB,EAAQY,MAAMC,MAAMC,MAA7B,MAGjB,6BACE,kBAAC,IAAD,CAAKA,MAAOd,EAAQoB,KAAKP,MAAMC,QAC/B,4BAAQO,QAxBC,kBAAMf,GAASD,IAwBKiB,KAAK,UAAlC,SAIF,kBAAC,IAAD,CAAKR,MAAOd,EAAQY,MAAMC,MAAMC,SAGlC,kBAAC,OAAD,CAAMS,GAAE,YAAcvB,EAAQwB,KAAKC,SACjC,4BACE,0BAAMV,UAAU,QAAQf,EAAQ0B,OAElC,+BAAK1B,EAAQ2B,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMH,YAOpC,SAASI,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAC9BC,EAAW,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,GAMlB,OACE,6BAWE,kBAAC,IAAWL,EACTD,EAASH,KAAI,SAAC5B,GAAD,OACZ,kBAACD,EAAD,CAAeuC,IAAKtC,EAAQuC,GAAIvC,QAASA,SCxFpC,SAASwC,EAAT,GAAiC,IAATC,EAAQ,EAARA,KACrC/B,QAAQC,IAAI8B,GACZ,IAAMV,EAAWU,EAAKV,SAASW,MAC/B,OACE,oCACE,kBAAC,EAAD,CAAaX,SAAUA","file":"component---src-pages-projects-js-f0d267d5374aae7a4cb1.js","sourcesContent":["import React, { useState } from 'react';\n// import { Link } from 'gatsby-plugin-modal-routing';\nimport Img from 'gatsby-image';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst classNames = require('classnames');\n\nconst ProjectStyles = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  .active {\n    background-color: red;\n  }\n`;\n\nfunction SingleProject({ project }) {\n  const [hovered, setHovered] = useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  const [showing, setShow] = useState(false);\n  const toggleShow = () => setShow(!showing);\n\n  const projectClasses = classNames({\n    project: true,\n    active: hovered ? 'active' : '',\n    open: showing ? 'open' : '',\n  });\n\n  console.log(project.image.asset.fluid)\n  return (\n    <ProjectStyles>\n      <div\n        // className={hovered ? 'active' : ''}\n        className={projectClasses}\n        onMouseEnter={toggleHover}\n        onMouseLeave={toggleHover}\n      >\n        <div\n          style={{\n            backgroundImage: `url(${project.image.asset.fluid})`,\n          }}\n        >\n          <div>\n            <Img fluid={project.logo.asset.fluid} />\n            <button onClick={toggleShow} type=\"button\">\n              more\n            </button>\n          </div>\n          <Img fluid={project.image.asset.fluid} />\n        </div>\n\n        <Link to={`/project/${project.slug.current}`}>\n          <h2>\n            <span className=\"mark\">{project.name}</span>\n          </h2>\n          <p> {project.skills.map((skill) => skill.name)}</p>\n        </Link>\n      </div>\n    </ProjectStyles>\n  );\n}\n\nexport default function Projectlist({ projects }) {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n  };\n\n  //   const [hovered, setHovered] = useState(false);\n  //   const toggleHover = () => setHovered(!hovered);\n\n  return (\n    <div>\n      {/* <ProjectStyles>\n        <div\n          className={hovered ? 'active' : ''}\n          onMouseEnter={toggleHover}\n          onMouseLeave={toggleHover}\n        >\n          Hover test\n        </div>\n      </ProjectStyles> */}\n\n      <Slider {...settings}>\n        {projects.map((project) => (\n          <SingleProject key={project.id} project={project} />\n        ))}\n      </Slider>\n    </div>\n  );\n}\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport ProjectList from '../components/ProjectList';\n\nexport default function ProjectsPage({ data }) {\n  console.log(data);\n  const projects = data.projects.nodes;\n  return (\n    <>\n      <ProjectList projects={projects} />\n    </>\n  );\n}\n\nexport const query = graphql`\n  query ProjectQuery {\n    projects: allSanityProject {\n      nodes {\n        name\n        id\n        slug {\n          current\n        }\n        logo {\n          asset {\n            fluid(maxWidth: 400) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n        description\n        skills {\n          id\n          name\n        }\n        image {\n          asset {\n            fluid(maxWidth: 400) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}